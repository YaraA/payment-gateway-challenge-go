basePath: /
definitions:
  models.GetPaymentResponse:
    properties:
      amount:
        type: integer
      card_number_last_four:
        type: integer
      currency:
        type: string
      expiry_month:
        maximum: 12
        minimum: 1
        type: integer
      expiry_year:
        type: integer
      id:
        type: string
      payment_status:
        enum:
        - Authorized
        - Declined
        type: string
    required:
    - amount
    - card_number_last_four
    - currency
    - expiry_month
    - expiry_year
    - id
    - payment_status
    type: object
  models.PostPaymentRequest:
    properties:
      amount:
        type: integer
      card_number:
        maxLength: 19
        minLength: 14
        type: string
      currency:
        type: string
      cvv:
        type: integer
      expiry_month:
        maximum: 12
        minimum: 1
        type: integer
      expiry_year:
        type: integer
    required:
    - amount
    - card_number
    - currency
    - cvv
    - expiry_month
    - expiry_year
    type: object
  models.PostPaymentResponse:
    properties:
      amount:
        type: integer
      card_number_last_four:
        type: integer
      currency:
        type: string
      expiry_month:
        maximum: 12
        minimum: 1
        type: integer
      expiry_year:
        type: integer
      id:
        type: string
      payment_status:
        enum:
        - Authorized
        - Declined
        type: string
    required:
    - amount
    - card_number_last_four
    - currency
    - expiry_month
    - expiry_year
    - id
    - payment_status
    type: object
host: localhost:8090
info:
  contact: {}
  description: Interview challenge for building a Payment Gateway - Go version
  title: Payment Gateway Challenge Go
paths:
  /api/payments:
    post:
      consumes:
      - application/json
      description: Create a payment request
      parameters:
      - description: Payment details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PostPaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostPaymentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Post payment
      tags:
      - payments
  /api/payments/{id}:
    get:
      consumes:
      - application/json
      description: get payment by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPaymentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get payment by ID
      tags:
      - payments
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
